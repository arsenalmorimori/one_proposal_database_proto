// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using one_db_prototype_chilibean.Data;

#nullable disable

namespace one_db_prototype_chilibean.Migrations.SqliteMigrations
{
    [DbContext(typeof(SqliteDbContext))]
    [Migration("20250419051509_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("one_db_prototype_chilibean.Model.ActivityBrief", b =>
                {
                    b.Property<Guid>("activity_id")
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_id");

                    b.Property<string>("activity_brief_description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_brief_description");

                    b.Property<DateTime>("activity_date")
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_date");

                    b.HasKey("activity_id");

                    b.ToTable("activity_brief_tbl", (string)null);
                });

            modelBuilder.Entity("one_db_prototype_chilibean.Model.ActivityBudgetPlan", b =>
                {
                    b.Property<int>("budget_plan_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("budget_plan_id");

                    b.Property<Guid>("activity_id")
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_id");

                    b.Property<string>("item_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("item_name");

                    b.Property<decimal>("price")
                        .HasColumnType("TEXT")
                        .HasColumnName("price");

                    b.Property<int>("quantity")
                        .HasColumnType("INTEGER")
                        .HasColumnName("quantity");

                    b.HasKey("budget_plan_id");

                    b.HasIndex("activity_id");

                    b.ToTable("activity_budget_plan_tbl", (string)null);
                });

            modelBuilder.Entity("one_db_prototype_chilibean.Model.ActivityDetail", b =>
                {
                    b.Property<Guid>("activity_id")
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_id");

                    b.Property<string>("activity_activity_reach")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_activity_reach");

                    b.Property<string>("activity_activity_type")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_activity_type");

                    b.Property<string>("activity_objectives")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_objectives");

                    b.Property<string>("activity_rationale")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_rationale");

                    b.HasKey("activity_id");

                    b.ToTable("activity_detail_tbl", (string)null);
                });

            modelBuilder.Entity("one_db_prototype_chilibean.Model.ActivityProfile", b =>
                {
                    b.Property<Guid>("activity_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_id");

                    b.Property<string>("activity_title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_title");

                    b.Property<int>("club_id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("club_id");

                    b.Property<int?>("club_id1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("person_in_charge")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("person_in_charge");

                    b.HasKey("activity_id");

                    b.HasIndex("club_id");

                    b.HasIndex("club_id1");

                    b.ToTable("activity_profile_tbl", (string)null);
                });

            modelBuilder.Entity("one_db_prototype_chilibean.Model.ActivityStatus", b =>
                {
                    b.Property<Guid>("activity_id")
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_id");

                    b.Property<string>("activity_overall_status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_overall_status");

                    b.Property<string>("admin_1_status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("admin_1_status");

                    b.Property<string>("admin_2_status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("admin_2_status");

                    b.Property<string>("admin_3_status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("admin_3_status");

                    b.Property<DateTime>("checked_date")
                        .HasColumnType("TEXT")
                        .HasColumnName("checked_date");

                    b.Property<bool>("is_draft")
                        .HasColumnType("INTEGER");

                    b.HasKey("activity_id");

                    b.ToTable("activity_status_tbl", (string)null);
                });

            modelBuilder.Entity("one_db_prototype_chilibean.Model.Club", b =>
                {
                    b.Property<int>("club_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("club_id");

                    b.Property<string>("club_name")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("club_name");

                    b.HasKey("club_id");

                    b.ToTable("club_main_tbl", (string)null);
                });

            modelBuilder.Entity("one_db_prototype_chilibean.Model.RemarksActivity", b =>
                {
                    b.Property<Guid>("activity_id")
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_id");

                    b.Property<string>("activity_brief_description_remark")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_brief_description_remark");

                    b.Property<string>("activity_budget_remark")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_budget_remark");

                    b.Property<string>("activity_date_remark")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_date_remark");

                    b.Property<string>("activity_reach_remark")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_reach_remark");

                    b.Property<string>("activity_title_remark")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_title_remark");

                    b.Property<string>("activity_type_remark")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_type_remark");

                    b.Property<string>("objectives_remark")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT")
                        .HasColumnName("objectives_remark");

                    b.Property<string>("rationale_remark")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT")
                        .HasColumnName("rationale_remark");

                    b.HasKey("activity_id");

                    b.ToTable("remarks_activity_tbl", (string)null);
                });

            modelBuilder.Entity("one_db_prototype_chilibean.Model.ActivityBrief", b =>
                {
                    b.HasOne("one_db_prototype_chilibean.Model.ActivityProfile", "ActivityProfile")
                        .WithOne("ActivityBrief")
                        .HasForeignKey("one_db_prototype_chilibean.Model.ActivityBrief", "activity_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityProfile");
                });

            modelBuilder.Entity("one_db_prototype_chilibean.Model.ActivityBudgetPlan", b =>
                {
                    b.HasOne("one_db_prototype_chilibean.Model.ActivityProfile", "ActivityProfile")
                        .WithMany("ActivityBudgetPlans")
                        .HasForeignKey("activity_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityProfile");
                });

            modelBuilder.Entity("one_db_prototype_chilibean.Model.ActivityDetail", b =>
                {
                    b.HasOne("one_db_prototype_chilibean.Model.ActivityProfile", "ActivityProfile")
                        .WithOne("ActivityDetail")
                        .HasForeignKey("one_db_prototype_chilibean.Model.ActivityDetail", "activity_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityProfile");
                });

            modelBuilder.Entity("one_db_prototype_chilibean.Model.ActivityProfile", b =>
                {
                    b.HasOne("one_db_prototype_chilibean.Model.Club", "Club")
                        .WithMany()
                        .HasForeignKey("club_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("one_db_prototype_chilibean.Model.Club", null)
                        .WithMany("ActivityProfiles")
                        .HasForeignKey("club_id1");

                    b.Navigation("Club");
                });

            modelBuilder.Entity("one_db_prototype_chilibean.Model.ActivityStatus", b =>
                {
                    b.HasOne("one_db_prototype_chilibean.Model.ActivityProfile", "ActivityProfile")
                        .WithOne("ActivityStatus")
                        .HasForeignKey("one_db_prototype_chilibean.Model.ActivityStatus", "activity_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityProfile");
                });

            modelBuilder.Entity("one_db_prototype_chilibean.Model.RemarksActivity", b =>
                {
                    b.HasOne("one_db_prototype_chilibean.Model.ActivityProfile", "ActivityProfile")
                        .WithOne("RemarksActivity")
                        .HasForeignKey("one_db_prototype_chilibean.Model.RemarksActivity", "activity_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityProfile");
                });

            modelBuilder.Entity("one_db_prototype_chilibean.Model.ActivityProfile", b =>
                {
                    b.Navigation("ActivityBrief")
                        .IsRequired();

                    b.Navigation("ActivityBudgetPlans");

                    b.Navigation("ActivityDetail")
                        .IsRequired();

                    b.Navigation("ActivityStatus")
                        .IsRequired();

                    b.Navigation("RemarksActivity")
                        .IsRequired();
                });

            modelBuilder.Entity("one_db_prototype_chilibean.Model.Club", b =>
                {
                    b.Navigation("ActivityProfiles");
                });
#pragma warning restore 612, 618
        }
    }
}
